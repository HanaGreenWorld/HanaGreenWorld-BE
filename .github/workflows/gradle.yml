#name: Java CI with Gradle
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#
#    steps:
#      # 기본 체크아웃
#      - name: Checkout
#        uses: actions/checkout@v4
#      # Gradlew 실행 허용
#      - name: Run chmod to make gradlew executable
#        run: chmod +x ./gradlew
#      # JDK 17 세팅
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#      # Gradle 설정
#      - name: Setup Gradle
#        uses: gradle/actions/setup-gradle@v3
#      # Gradle 빌드 (테스트 건너뛰기)
#      - name: Build with Gradle
#        run: ./gradlew build -x test
#      # 배포 패키지 준비
#      - name: Prepare deployment package
#        run: |
#          mkdir -p deploy
#          cp build/libs/${{ secrets.JAR_NAME }} deploy/
#      # SSH 키 준비
#      - name: Add SSH key
#        uses: webfactory/ssh-agent@v0.9.0
#        with:
#          ssh-private-key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
#      # GCP VM에 배포
#      - name: Deploy to GCP VM
#        run: |
#          # 1. SSH 접속을 통해 애플리케이션 중지
#          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} 'sudo systemctl stop hana-green-world.service'
#
#          # 2. 새로운 JAR 파일을 올바른 경로로 복사
#          # 이 명령어는 SSH와 별개로 실행됩니다.
#          scp -o StrictHostKeyChecking=no deploy/hanagreenworld-0.0.1-SNAPSHOT.jar ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }}:/home/${{ secrets.GCP_SSH_USER }}/BE/build/libs/
#
#          # 3. SSH 접속을 통해 환경변수를 설정하고 서비스를 재시작합니다.
#          # sudo sh -c를 사용하여 환경변수를 올바르게 전달합니다.
#          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} '
#            sudo sh -c "
#              export DATASOURCE_URL=\"${{ secrets.DATASOURCE_URL }}\"
#              export DATASOURCE_USERNAME=\"${{ secrets.DATASOURCE_USERNAME }}\"
#              export DATASOURCE_PASSWORD=\"${{ secrets.DATASOURCE_PASSWORD }}\"
#              export GEMINI_API_KEY=\"${{ secrets.GEMINI_API_KEY }}\"
#              export JWT_SECRET=\"${{ secrets.JWT_SECRET }}\"
#
#              systemctl start hana-green-world.service
#            "
#          '